
plugins {
    alias(libs.plugins.android.application)
    alias(libs.plugins.kotlin.android)
    alias(libs.plugins.kotlin.compose)
    alias(libs.plugins.kotlin.kapt)
    alias(libs.plugins.gms)
    alias(libs.plugins.hilt)
    alias(libs.plugins.firebase.crashlytics)
    alias(libs.plugins.ksp)
}


android {
    namespace 'com.acanel.deskclock'
    Properties properties = new Properties()
    properties.load(project.rootProject.file('local.properties').newDataInputStream())
    signingConfigs {
        release {
            storeFile file(properties.getProperty('SIGNED_STORE_FILE'))
            storePassword properties.getProperty('SIGNED_STORE_PASSWORD')
            keyAlias properties.getProperty('SIGNED_KEY_ALIAS')
            keyPassword properties.getProperty('SIGNED_KEY_PASSWORD')
        }
    }
    compileSdk 35

    defaultConfig {
        applicationId "com.acanel.deskclock"
        minSdk 24
        targetSdk 35
        versionCode 104
        versionName "1.0.4"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_21
        targetCompatibility JavaVersion.VERSION_21
    }
    kotlinOptions {
        jvmTarget = '21'
    }
    buildFeatures {
        compose true
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
    applicationVariants.configureEach { variant ->
        variant.outputs.configureEach {
            def flavor = variant.name
            def versionName = variant.versionName
            def formattedDate = new Date().format('yyMMdd')
            outputFileName = "${applicationId}_v${versionName}_${formattedDate}-${flavor}.apk"
        }
    }
}

dependencies {

    implementation libs.androidx.appcompat

    implementation libs.androidx.core.ktx
    implementation libs.androidx.lifecycle.runtime.ktx

    implementation platform(libs.androidx.compose.bom)
    implementation libs.androidx.activity.compose
    implementation libs.androidx.ui
    implementation libs.androidx.ui.graphics
    implementation libs.androidx.ui.tooling.preview
    implementation libs.androidx.material
    implementation libs.androidx.material3

    implementation libs.hilt.android
    kapt libs.hilt.compiler


    implementation libs.androidx.lifecycle.livedata.ktx
    implementation libs.androidx.lifecycle.runtime.ktx
    implementation libs.androidx.lifecycle.viewmodel.ktx
    implementation libs.androidx.lifecycle.viewmodel.compose

    implementation libs.androidx.navigation.fragment.ktx
    implementation libs.androidx.navigation.ui.ktx
    implementation libs.androidx.navigation.compose
    implementation libs.androidx.hilt.navigation.compose
    implementation libs.androidx.constraintlayout.compose

    implementation libs.androidx.datastore
    implementation libs.androidx.datastore.preferences
    implementation libs.coil.compose
    implementation libs.retrofit
    implementation libs.retrofit.converter.gson
    implementation libs.okhttp

    implementation platform(libs.firebase.bom)
    implementation libs.firebase.crashlytics.ktx
    implementation libs.firebase.analytics.ktx


    implementation libs.androidx.room.runtime
    implementation libs.androidx.room.ktx
    ksp libs.androidx.room.compiler

    // 3rd party library
    implementation libs.godaddy.color.picker
    implementation libs.godaddy.color.picker.android
    implementation libs.accompanist.systemuicontroller


    // Test
    testImplementation libs.junit
    androidTestImplementation libs.androidx.junit
    androidTestImplementation libs.androidx.espresso.core
    androidTestImplementation platform(libs.androidx.compose.bom)
    androidTestImplementation libs.androidx.ui.test.junit4


    // Debug
    debugImplementation libs.androidx.ui.tooling
    debugImplementation libs.androidx.ui.test.manifest
    debugImplementation 'com.facebook.flipper:flipper:0.172.0'
    debugImplementation 'com.facebook.soloader:soloader:0.10.4'
    debugImplementation 'com.facebook.flipper:flipper-network-plugin:0.172.0'
}

kapt {
    correctErrorTypes true
}